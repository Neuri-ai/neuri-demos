(()=>{"use strict";var t=function(t,e,n,o){return new(n||(n=Promise))((function(i,s){function r(t){try{l(o.next(t))}catch(t){s(t)}}function a(t){try{l(o.throw(t))}catch(t){s(t)}}function l(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,a)}l((o=o.apply(t,e||[])).next())}))};class e extends HTMLElement{constructor(){super(),this.shadowDOM=this.attachShadow({mode:"open"})}connectedCallback(){this.mapComponentAttributes(),this.render(),this.initComponent()}mapComponentAttributes(){["text"].forEach((t=>{this.attributes[t]||(this.attributes[t]={value:"To use voice input, we needs access to your microphone. Check your browser preferences to allow microphone access and reload the page."})}))}render(){this.shadowDOM.innerHTML=`\n\t\t\t${this.templateCss()}\n\t\t\t${this.template()}\n\t\t`}checkMicrophone(){return t(this,void 0,void 0,(function*(){return navigator.mediaDevices.getUserMedia({video:!1,audio:!0}).then((t=>!0)).catch((t=>(this.$root.style.display="inherit",!1)))}))}checkBrowser(){const t=window.webkitSpeechRecognition||window.SpeechRecognition;try{return new t,!0}catch(t){return this.$root.style.display="inherit",this.$modalDOMTitle.innerHTML="Unsupported browser",this.$modalDOMMessage.innerHTML="To enable the SpeechRecognition in Firefox Nightly > 72, go to about:config and switch the flags media.webspeech.recognition.enable and media.webspeech.recognition.force_enable to true.",!1}}initComponent(){return t(this,void 0,void 0,(function*(){let t;this.$root=this.shadowDOM.querySelector(".permission-modal"),this.$modalDOMMessage=this.shadowDOM.querySelector(".permission-modal-message"),this.$modalDOMTitle=this.shadowDOM.querySelector(".permission-modal-title");let e=this.shadowDOM.getElementById("permission-allow");const n=yield this.checkMicrophone();n&&(t=this.checkBrowser()),n&&t&&(this.$root.style.display="none"),e.onclick=()=>{setTimeout((()=>{window.location.reload()}),500)}}))}disconnectedCallback(){this.remove()}templateCss(){return"\n\t\t<style>\n\t\t\t.permission-modal{\n\t\t\t\tposition: fixed;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tbox-shadow: 0 0 1rem 0 rgb(0 0 0 / 20%);\n\t\t\t\tbackground-color: rgba(0, 0, 0, .50);\n\t\t\t\tbackdrop-filter: blur(3px);\n\t\t\t\tz-index: 9999;\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t.permission-modal-content{\n\t\t\t\tmax-width: 400px;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 44%;\n\t\t\t\tleft: 50%;\n\t\t\t\ttransform: translate(-44%, -50%);\n\t\t\t}\n\t\t\t.permission-modal-header{\n\t\t\t\tcolor: #fff;\n\t\t\t\tfont-family: 'Poppins', sans-serif;\n\t\t\t}\n\t\t\t.permission-modal-header>h2{\n\t\t\t\tfont-size: 1.5rem;\n\t\t\t\tfont-weight: 600;\n\t\t\t\tmargin-bottom: 1rem;\n\t\t\t}\n\t\t\t.permission-modal-header>p{\n\t\t\t\tfont-size: 13px;\n\t\t\t\tmargin-bottom: 2rem;\n\t\t\t}\n\t\t\tbutton.permission-modal-button{\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tborder: 1px solid #fff;\n\t\t\t\tborder-radius: 30px;\n\t\t\t\tfont-weight: 600;\n\t\t\t\tcolor: #fff;\n\t\t\t\tfont-family: 'Poppins', sans-serif;\n\t\t\t\tpadding: 0.5rem 2.5rem;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\tbutton.permission-modal-button:hover{\n\t\t\t\tbackground-color: #fff;\n\t\t\t\tcolor: #000;\n\t\t\t\ttransition: 0.3s ease-in-out;\n\t\t\t}\n\t\t</style>\n\t\t"}template(){return`\n\t\t\t<div class="permission-modal">\n\t\t\t\t<div class="permission-modal-content">\n\t\t\t\t\t<div class="permission-modal-header">\n\t\t\t\t\t\t<h2 class="permission-modal-title">Microphone blocked</h2>\n\t\t\t\t\t\t<p class="permission-modal-message">${this.attributes.text.value}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="permission-modal-body">\n\t\t\t\t\t\t<button class="permission-modal-button" id="permission-allow">Allow</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`}}const n=e;class o extends HTMLElement{constructor(){super(),this.$eventDetails={},this.$onStart=new CustomEvent("onStart",{bubbles:!0,composed:!0,cancelable:!0,detail:{message:"Starting"}}),this.$onInitilized=new CustomEvent("onInitilized",{bubbles:!0,composed:!0,cancelable:!0,detail:{message:"initialized"}}),this.$onspeech=new CustomEvent("onSpeech",{bubbles:!0,composed:!0,cancelable:!0,detail:this.$eventDetails}),this.$onResult=new CustomEvent("onResult",{bubbles:!0,composed:!0,cancelable:!0,detail:this.$eventDetails}),this.$onError=new CustomEvent("onError",{bubbles:!0,composed:!0,cancelable:!0,detail:this.$eventDetails}),this.shadowDOM=this.attachShadow({mode:"open"})}connectedCallback(){this.mapComponentAttributes(),this.render(),this.initComponent()}mapComponentAttributes(){["apiKey","lang","realtime","service","placement","size","backgroundColor","iconColor","typography","cssUrl","iconSize","iconColor","iconHoverColor","activeBgColor"].forEach((t=>{if(("apiKey"===t||"lang"===t)&&!this.hasAttribute(t))throw new Error(`${t} is required`);"realtime"!==t&&"hide"!==t||this.hasAttribute(t)||this.setAttribute(t,"false"),"service"===t&&(this.hasAttribute(t)||this.setAttribute(t,"default")),this.attributes||(this.attributes[t]={value:""})}))}render(){this.shadowDOM.innerHTML=`\n\t\t\t${this.templateCss()}\n\t\t\t${this.template()}\n\t\t`}initComponent(){this.$component=this.shadowDOM.querySelector(".push-to-talk-box");let t=this.shadowDOM.querySelector(".rounded-microphone-icon-button");this.shadowDOM.querySelector(".micrpohone-container"),this.shadowDOM.querySelector(".push-help-text"),this.loadSpeechRecognition(),t.onclick=()=>{this.$recognition.start()},window.addEventListener("onStart",(t=>{console.log("heeeelp")}))}loadSpeechRecognition(){const t=window.webkitSpeechRecognition||window.SpeechRecognition;this.$recognition=new t,this.$recognition.interimResults=""!==this.attributes.realtime.value,this.$recognition.lang=this.attributes.lang.value,this.dispatchEvent(this.$onStart),this.$recognition.onstart=()=>{this.dispatchEvent(this.$onInitilized)},this.$recognition.onspeechend=()=>{this.$recognition.stop(),this.dispatchEvent(this.$onResult)},this.$recognition.onresult=t=>{"true"===this.attributes.realtime.value&&this.dispatchEvent(this.$onspeech)}}disconnectedCallback(){this.remove()}defaultStyles(){return`\n\t\t.push-to-talk-box {\n\t\t\tposition: absolute;\n\t\t\tbottom: 0;\n\t\t\ttext-align: center;\n\t\t\twidth: 100%;\n\t\t}\n\t\t.push-help-text{\n\t\t\tdisplay: none;\n\t\t}\n\t\tbutton.rounded-microphone-icon-button{\n\t\t\twidth: ${this.attributes.size?this.attributes.size.value:"68px"};\n\t\t\theight: ${this.attributes.size?this.attributes.size.value:"68px"};\n\t\t\tborder-radius: 50%;\n\t\t\tbackground: ${this.attributes.backgroundColor?this.attributes.backgroundColor.value:"linear-gradient(180deg, #518EF8 0%, #1163FF 100%)"};\n\t\t\tborder: none;\n\t\t\tcursor: pointer;\n\t\t}\n\t\tbutton.rounded-microphone-icon-button:hover{\n\t\t\tbackground: ${this.attributes.activeBgColor?this.attributes.activeBgColor.value:"#1163FF"};\n\t\t}\n\t\t`}templateCss(){return this.attributes.cssUrl?`<link rel="stylesheet" href="${this.attributes.cssUrl.value}">`:`<style>${this.defaultStyles()}</style>`}template(){return'\n\t\t<div class="push-to-talk-box">\n\t\t\t<div class="push-to-talk-box-wave"></div>\n\t\t\t<div class="push-help-text">\n\t\t\t\t<p>Press the spacebar or click the button to start speaking.</p>\n\t\t\t</div>\n\t\t\t<div class="micrpohone-container">\n\t\t\t\t<button class="btn btn-primary rounded-microphone-icon-button" >\n\t\t\t\t\t<i class="microphone-icon"></i>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t'}}const i=o;window.customElements.get("push-to-talk")||window.customElements.define("push-to-talk",i),window.customElements.get("check-permissions")||window.customElements.define("check-permissions",n)})();